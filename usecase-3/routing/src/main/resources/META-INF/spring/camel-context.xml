<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring
       http://camel.apache.org/schema/spring/camel-spring.xsd">  

    <!-- H2 Datasource -->
    <bean id="usecaseDB" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.h2.Driver"/>
        <property name="url" value="jdbc:h2:tcp://localhost/~/usecaseDB"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>
    
    <bean id="processorBean" class="org.fuse.usecase.ProcessorBean" />

    <!-- SQL Component -->
    <bean id="sql" class="org.apache.camel.component.sql.SqlComponent">
    	<property name="dataSource" ref="usecaseDB" />
		<property name="usePlaceholder" value="true" />
	</bean>

    <!-- Spring JMS TxManager -->
    <bean id="jmsTransactionManager" class="org.springframework.jms.connection.JmsTransactionManager">
    	<property name="connectionFactory" ref="jmsConnectionFactory"/>
    </bean>

    <!-- JMS ConnectionFactory  -->
    <bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
    	<property name="brokerURL" 
    		value="tcp://localhost:61616?jms.redeliveryPolicy.maximumRedeliveries=0"/>
        <property name="userName" value="admin"/>
  		<property name="password" value="admin"/>
    </bean>

    <!-- ActiveMQ Camel Component - Tx -->
    <bean id="amq-tx" class="org.apache.activemq.camel.component.ActiveMQComponent">
    	<property name="transacted" value="true"/>
        <property name="transactionManager" ref="jmsTransactionManager"/>
    </bean>

    <!-- ActiveMQ Camel Component - No Tx -->
    <bean id="amq-notx" class="org.apache.activemq.camel.component.ActiveMQComponent">
    	<property name="connectionFactory" ref="jmsConnectionFactory"/>
    </bean>

    <camelContext trace="false" xmlns="http://camel.apache.org/schema/spring">
        <propertyPlaceholder id="properties" location="fabric8/route.properties"/>
        
        <endpoint id="csv2json"
                  uri="dozer:csv2json?unmarshalId=csv&amp;marshalId=transform-json&amp;sourceModel=org.acme.Customer&amp;targetModel=org.globex.Account&amp;mappingFile=transformation.xml"/>
        
        <dataFormats>
			<bindy type="Csv" classType="org.acme.Customer" id="csv" />
			<json library="Jackson" unmarshalTypeName="org.globex.Account" id="transform-json"/>
		</dataFormats>
        
        <route id="queue-split-transform-queue">
        	<from uri="amq-notx:queue:usecase-input"/>
        	<onException>
				<exception>java.lang.IllegalArgumentException</exception>
				<handled>
					<constant>false</constant>
				</handled>
				<log message="Transformation result in error ${body}"/>
				<setHeader headerName="error-code">
                    <constant>111</constant>
                </setHeader>
                <setHeader headerName="error-message">
                    <simple>${exception.message}</simple>
                </setHeader>
                <setBody>
                	<simple>${body}</simple>
                </setBody>
                <to uri="direct:error-queue" />
			</onException>
			<split>
                <tokenize token="\n" trim="true"/>
                <log message="Transform input ${body} to json"/>
                <to ref="csv2json"/>
                <to id="output-queue-endpoint" uri="amq-notx:queue:output"/>
            </split>
        </route>
        
        <route id="direct-error-queue">
        	<from uri="direct:error-queue" />
        	<transform>
				<method bean="processorBean" method="defineErrorParameters"></method>
			</transform>
			<to id="error-queue-endpoint"
				uri="sql:INSERT INTO USECASE.T_ERROR (ERROR_CODE,ERROR_MESSAGE,MESSAGE,STATUS) VALUES (:#ERROR_CODE,:#ERROR_MESSAGE,:#MESSAGE,:#STATUS)" />
        </route>
		
		<route>
            <from uri="sql:SELECT * FROM USECASE.T_ERROR WHERE STATUS = 'FIXED'?consumer.onConsume=UPDATE USECASE.T_ERROR SET STATUS = 'CLOSE' WHERE STATUS = 'FIXED' AND ID = :#ID"/>
            <transform>
                <simple>${in.body.get('MESSAGE')}</simple>
            </transform>
            <to uri="amq-tx:queue:input"/>
        </route>
		
		<route>
			<from uri="amq-notx:queue:output" />
			<unmarshal ref="transform-json" />
			<transform>
				<method bean="processorBean" method="defineNamedParameters"></method>
			</transform>
			<to 
				uri="sql:INSERT INTO USECASE.T_ACCOUNT (CLIENT_ID,SALES_CONTACT,COMPANY_NAME,COMPANY_GEO,COMPANY_ACTIVE,CONTACT_FIRST_NAME,CONTACT_LAST_NAME,CONTACT_ADDRESS,CONTACT_CITY,CONTACT_STATE,CONTACT_ZIP,CONTACT_PHONE,CREATION_DATE,CREATION_USER) VALUES (:#CLIENT_ID,:#SALES_CONTACT,:#COMPANY_NAME,:#COMPANY_GEO,:#COMPANY_ACTIVE,:#CONTACT_FIRST_NAME,:#CONTACT_LAST_NAME,:#CONTACT_ADDRESS,:#CONTACT_CITY,:#CONTACT_STATE,:#CONTACT_ZIP,:#CONTACT_PHONE,:#CREATION_DATE,:#CREATION_USER)" />
		</route>
        
    </camelContext>
</beans>